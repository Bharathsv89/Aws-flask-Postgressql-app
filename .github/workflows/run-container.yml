

- name: SSH into EC2 and run Docker
  run: |
    ssh -o StrictHostKeyChecking=no -i rcb.pem ubuntu@${{ env.EC2_IP }} << 'EOF'
      set -e

      # Validate required env variables
      if [[ -z "${ECR_REPO}" || -z "${DB_HOST}" ]]; then
        echo "ECR_REPO or DB_HOST not set"
        exit 1
      fi

      # Update system and install Docker
      sudo apt update -y
      sudo apt install -y docker.io curl unzip

      # Start Docker
      sudo systemctl enable docker
      sudo systemctl start docker

      # Install AWS CLI v2
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install

      # Add AWS CLI to PATH
      export PATH=$PATH:/usr/local/bin

      # Login to ECR (non-interactive)
      aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${ECR_REPO}

      # Pull and run container
      sudo docker pull ${ECR_REPO}:latest
      sudo docker rm -f flask-app || true
      sudo docker run -d --name flask-app -p 5001:5000 \
        -e DB_HOST=${DB_HOST} \
        -e DB_NAME=greetings_db \
        -e DB_USER=${DB_USERNAME} \
        -e DB_PASS=${DB_PASSWORD} \
        ${ECR_REPO}:latest
    EOF
  env:
    DB_HOST: ${{ env.DB_HOST }}
    EC2_IP: ${{ env.EC2_IP }}
    ECR_REPO: ${{ env.ECR_REPO }}
    DB_USERNAME: ${{ secrets.DB_USERNAME }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
